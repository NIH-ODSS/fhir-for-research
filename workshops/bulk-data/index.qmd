---
title: FHIR Bulk Data Workshop

toc: false
number-sections: false

reading_time: true

roles:
  - Informaticist
  - Software Engineer
---

## Slides

::: callout-note
Please see the [Introduction to FHIR Bulk Data Webinar](../../webinars/bulk-data/index.qmd), which introduces the content in this workshop.
:::

```{=html}
<iframe style="border: 3px solid #dee2e6; width: 100%; height: 475px;" src="slides.html" title="FHIR Bulk Data workshop slides, powered by Revealjs. A link to an accessible PDF of these slides is in the section below."></iframe>
```
### Other slide formats

-   [Printable web page](slides.html?print-pdf)
-   [Accessible PDF](Workshop - Bulk Data 508C.pdf)

## Workshop notebook

The materials for this workshop are in a Jupyter notebook. You can access the notebook [as part of this website](notebook.html), or via the [raw `.ipynb` file](https://github.com/NIH-ODSS/fhir-for-research/blob/main/workshops/bulk-data/notebook.ipynb) ([open in nbviewer](https://nbviewer.org/github/NIH-ODSS/fhir-for-research/blob/main/workshops/bulk-data/notebook.ipynb)).

The full interactive version of the notebook can be run locally, by running the following sequence of commands in a terminal window, to install and launch the Jupyter environment. Note [Python](https://docs.python.org/3/using/index.html) is required to be installed first.

``` sh
git clone https://github.com/NIH-ODSS/fhir-for-research.git # Clone this git repository
cd fhir-for-research
python3 -m venv venv/ # Create a Python virtualenv
source venv/bin/activate # Activate the virtualenv
pip install -r requirements.txt # Install dependencies
cd workshops/fhir-bulk-data # Go to this folder
python -m jupyter notebook # Run the Jupyter notebook
```

A browser window will pop up showing the "fhir-bulk-data" folder in Jupyter. Click on the `notebook.ipynb` to open it.

## JKWS to PEM conversion

This workshop uses <https://bulk-data.smarthealthit.org> to provide a testing FHIR server. For convenience, this website will generate the public/private keypair in JWKS format. This has to be converted to PEM format for use in Python. [This web page](pem.html) can be used to do this.
